<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.sakd.core.model.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.soft.sakd.core.model.entity.Article">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="file_desc" jdbcType="VARCHAR" property="fileDesc"/>
    <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
    <result column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="browse_count" jdbcType="BIGINT" property="browseCount"/>
    <result column="like_count" jdbcType="BIGINT" property="likeCount"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="content" jdbcType="LONGVARCHAR" property="content"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.soft.sakd.core.model.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article (file_desc, file_name, user_id,
    browse_count, like_count, status,
    content)
    values (#{fileDesc,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
    #{browseCount,jdbcType=BIGINT}, #{likeCount,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},
    #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.soft.sakd.core.model.entity.Article">
    update t_article
    set file_desc = #{fileDesc,jdbcType=VARCHAR},
    file_name = #{fileName,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=BIGINT},
    browse_count = #{browseCount,jdbcType=BIGINT},
    like_count = #{likeCount,jdbcType=BIGINT},
    status = #{status,jdbcType=INTEGER},
    content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, file_desc, file_name, user_id, browse_count, like_count, status, content
    from t_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, file_desc, file_name, user_id, browse_count, like_count, status, content
    from t_article
  </select>


  <select id="queryAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, file_name, user_id, content, file_desc, like_count, browse_count
    from t_article ORDER BY id DESC LIMIT ${(page-1)*pageSize},${pageSize};
  </select>
  <select id="countArticle" resultType="java.lang.Integer">
    select count(id) from t_article
  </select>
  <update id="updateArticleLike" parameterType="com.soft.sakd.core.model.entity.Article">
    update t_article
    set file_desc = #{fileDesc,jdbcType=VARCHAR},
    file_name = #{fileName,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=BIGINT},
    browse_count = #{browseCount,jdbcType=BIGINT},
    like_count = #{likeCount,jdbcType=BIGINT},
    content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateArticleBrowse" parameterType="com.soft.sakd.core.model.entity.Article">
    update t_article
    set file_desc = #{fileDesc,jdbcType=VARCHAR},
    file_name = #{fileName,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=BIGINT},
    browse_count = #{browseCount,jdbcType=BIGINT},
    like_count = #{likeCount,jdbcType=BIGINT},
    content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>