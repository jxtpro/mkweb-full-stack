<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.sakd.core.model.mapper.SResourceMapper">
  <resultMap id="BaseResultMap" type="com.soft.sakd.core.model.entity.SResource">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
    <result column="create_by" jdbcType="INTEGER" property="createBy"/>
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
    <result column="icon_sclass" jdbcType="VARCHAR" property="iconSclass"/>
    <result column="include_uri" jdbcType="VARCHAR" property="includeUri"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="notes" jdbcType="VARCHAR" property="notes"/>
    <result column="sort_num" jdbcType="INTEGER" property="sortNum"/>
    <result column="optlock" jdbcType="INTEGER" property="optlock"/>
    <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.soft.sakd.core.model.entity.SResource" keyProperty="id"
    useGeneratedKeys="true">
    insert into s_resource (id, create_at, create_by,
    is_deleted, update_at, update_by,
    icon_sclass, include_uri, name,
    notes, sort_num, optlock,
    parent_id)
    values (#{id,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
    #{isDeleted,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER},
    #{iconSclass,jdbcType=VARCHAR}, #{includeUri,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{notes,jdbcType=VARCHAR}, #{sortNum,jdbcType=INTEGER}, #{optlock,jdbcType=INTEGER},
    #{parentId,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.soft.sakd.core.model.entity.SResource">
    update s_resource
    set create_at = #{createAt,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=INTEGER},
    is_deleted = #{isDeleted,jdbcType=INTEGER},
    update_at = #{updateAt,jdbcType=TIMESTAMP},
    update_by = #{updateBy,jdbcType=INTEGER},
    icon_sclass = #{iconSclass,jdbcType=VARCHAR},
    include_uri = #{includeUri,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    notes = #{notes,jdbcType=VARCHAR},
    sort_num = #{sortNum,jdbcType=INTEGER},
    optlock = #{optlock,jdbcType=INTEGER},
    parent_id = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, create_at, create_by, is_deleted, update_at, update_by, icon_sclass, include_uri,
    name, notes, sort_num, optlock, parent_id
    from s_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, create_at, create_by, is_deleted, update_at, update_by, icon_sclass, include_uri,
    name, notes, sort_num, optlock, parent_id
    from s_resource
  </select>

  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, create_at, create_by, is_deleted, update_at, update_by, icon_sclass, include_uri,
    name, notes, sort_num, optlock, parent_id
    from s_resource
    where name like concat('%', #{name,jdbcType=VARCHAR}, '%')
  </select>
  <select id="findByLimit" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, create_at, create_by, is_deleted, update_at, update_by, icon_sclass, include_uri,
    name, notes, sort_num, optlock, parent_id
    from s_resource LIMIT ${(page-1)*pageSize},${pageSize};
  </select>
  <select id="findByKeyWordLimit" resultMap="BaseResultMap">
    select id, create_at, create_by, is_deleted, update_at, update_by, icon_sclass, include_uri,
    name, notes, sort_num, optlock, parent_id
    from s_resource where name like concat('%', #{keyWord,jdbcType=VARCHAR}, '%') LIMIT ${(page-1)*pageSize},${pageSize};
  </select>
</mapper>